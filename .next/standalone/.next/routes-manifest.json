{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "strict-origin-when-cross-origin"
        },
        {
          "key": "X-DNS-Prefetch-Control",
          "value": "on"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    },
    {
      "source": "/fonts/(.*)",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^/fonts(?:/(.*))(?:/)?$"
    },
    {
      "source": "/images/(.*)",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=31536000, immutable"
        }
      ],
      "regex": "^/images(?:/(.*))(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/blog/[id]",
      "regex": "^/blog/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/blog/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/404",
      "regex": "^/404(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/404(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/blog",
      "regex": "^/blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blog(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/industries",
      "regex": "^/industries(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/industries(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/services",
      "regex": "^/services(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services(?:/)?$"
    },
    {
      "page": "/services/bulk-fuel",
      "regex": "^/services/bulk\\-fuel(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/bulk\\-fuel(?:/)?$"
    },
    {
      "page": "/services/fleet-refuelling",
      "regex": "^/services/fleet\\-refuelling(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/fleet\\-refuelling(?:/)?$"
    },
    {
      "page": "/services/generator-refuelling",
      "regex": "^/services/generator\\-refuelling(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/generator\\-refuelling(?:/)?$"
    },
    {
      "page": "/services/haulage",
      "regex": "^/services/haulage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/haulage(?:/)?$"
    },
    {
      "page": "/services/on-site-fuel-delivery",
      "regex": "^/services/on\\-site\\-fuel\\-delivery(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/on\\-site\\-fuel\\-delivery(?:/)?$"
    },
    {
      "page": "/services/services",
      "regex": "^/services/services(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/services(?:/)?$"
    },
    {
      "page": "/services/ulsd",
      "regex": "^/services/ulsd(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/services/ulsd(?:/)?$"
    },
    {
      "page": "/signupPage",
      "regex": "^/signupPage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signupPage(?:/)?$"
    },
    {
      "page": "/sustainability",
      "regex": "^/sustainability(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sustainability(?:/)?$"
    },
    {
      "page": "/unauthorizedPage",
      "regex": "^/unauthorizedPage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/unauthorizedPage(?:/)?$"
    }
  ],
  "dataRoutes": [
    {
      "page": "/",
      "dataRouteRegex": "^/_next/data/QVw0nONQ9hYK1snFs2Zvv/index\\.json$"
    },
    {
      "page": "/industries",
      "dataRouteRegex": "^/_next/data/QVw0nONQ9hYK1snFs2Zvv/industries\\.json$"
    },
    {
      "page": "/sustainability",
      "dataRouteRegex": "^/_next/data/QVw0nONQ9hYK1snFs2Zvv/sustainability\\.json$"
    },
    {
      "page": "/unauthorizedPage",
      "dataRouteRegex": "^/_next/data/QVw0nONQ9hYK1snFs2Zvv/unauthorizedPage\\.json$"
    }
  ],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}